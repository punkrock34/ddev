#!/usr/bin/env bash

## #ddev-generated: If you want to edit and own this file, remove this line.
## Description: Run HeidiSQL against current db
## Usage: heidisql [database] [user] [password] [nettype] [library]
## Example: "ddev heidisql" or "ddev heidisql db db db 8 libpq-10.dll"
## OSTypes: windows,wsl2,linux
## HostBinaryExists: /mnt/c/Program Files/HeidiSQL/heidisql.exe,C:\Program Files\HeidiSQL\Heidisql.exe,/usr/bin/heidisql,/usr/local/bin/heidisql

add_library_argument() {
  local binary_path="$1"

  case "$db_type" in
  postgres)
    postgres_lib=$(get_postgres_library "$binary_path") || return 1
    arguments+=("--library=${postgres_lib}")
    ;;
  mariadb | mysql)
    if [ -n "$db_library" ]; then
      arguments+=("--library=${db_library}")
    fi
    ;;
  esac
}

get_postgres_library() {
  local binary_path="$1"

  if [ -n "$db_library" ]; then
    echo "$db_library"
    return 0
  fi

  if [[ "$binary_path" == *.exe ]]; then
    echo "libpq-10.dll"
    return 0
  fi

  local native_libpq
  native_libpq=$(ldconfig -p | grep -o '/.*libpq\.so\.5' | head -n1)
  if [ -n "$native_libpq" ]; then
    echo "$native_libpq"
    return 0
  fi

  echo "Error: Native PostgreSQL connection requires 'libpq5'." >&2
  echo "Please install it (e.g., 'sudo apt install libpq5')." >&2
  return 1
}

if [ "${DDEV_PROJECT_STATUS}" != "running" ] && [ -z "$no_recursion" ]; then
  echo "Project ${DDEV_PROJECT} is not running, starting it"
  ddev start || exit $?
  no_recursion=true ddev "$(basename "$0")" "$@"
  exit $?
fi

db_name="${1:-db}"
db_user="${2:-root}"
db_password="${3:-root}"

# Default: MariaDB/MySQL (TCP/IP)
# See: https://www.heidisql.com/help.php#commandline
db_network_type="${4:-0}"

db_library="${5}"

db_type="$(echo "$DDEV_DATABASE" | sed 's/:.*//')"

if [ "$db_type" = "postgres" ]; then
  db_network_type="${4:-8}" # PostgreSQL (TCP/IP)
  db_user="${2:-db}"
  db_password="${3:-db}"
fi

arguments=(
  "--host=127.0.0.1"
  "--port=${DDEV_HOST_DB_PORT}"
  "--user=${db_user}"
  "--password=${db_password}"
  "--database=${db_name}"
  "--description=${DDEV_SITENAME}"
  "--nettype=${db_network_type}"
)

case $OSTYPE in
"win"* | "msys"*)
  add_library_argument "heidisql.exe"
  start "" "C:\Program Files\HeidiSQL\heidisql.exe" "${arguments[@]}"
  ;;

"linux-gnu")
  BINARIES=(
    "/usr/local/bin/heidisql"
    "/usr/bin/heidisql"
    "/mnt/c/Program Files/HeidiSQL/heidisql.exe"
  )
  for binary in "${BINARIES[@]}"; do
    if [ -x "$binary" ]; then
      launch_args=("${arguments[@]}")
      add_library_argument "$binary" || continue
      "$binary" "${launch_args[@]}" &>/dev/null &
      disown
      exit 0
    fi
  done
  ;;
esac
